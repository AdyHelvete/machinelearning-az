install.packages(tydiverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("iris")
colnames("iris")
colnames(iris)
dim(iris)
summary(iris)
iris$Setosa<-ifelse(iris$Species=="setosa",1,0)
iris$veriscolor<-(iris$Species=="veriscolor",1,0)
iris$veriscolor<-ifelse(iris$Species=="veriscolor",1,0)
iris$Species<-NULL
colnames(iris)
model<-lm(iris$Sepal.Length ~ iris$Sepal.Width+iris$Petal.Length+iris$Petal.Width+iris$Setosa+iris$veriscolor)
summary(iris)
summary(model)
iris$versicolor<-(iris$Species=="veriscolor",1,0)
iris$versicolor<-(iris$Species=="versicolor",1,0)
setwd("~/GitHub/machinelearning-az/ML-Practicas/P2 - Linear Regresion")
dataset=read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
#dividir los datos en conjuntos de entrenamiento y test
#install.packages("caTools")
library(caTools)
set.seed(123) #Semilla para aleatorios
library(caTools)
set.seed(123) #Semilla para aleatorios
split=sample.split(dataset$Salary,SplitRatio =2/3)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(testing_set)
View(testing_set)
View(training_set)
View(training_set)
#Ajustar el modelo de regresión lineal simple con datos de entrenamiento
regressor=lm(formula=Salary ~ YearsExperience,
data=training_set)
View(regressor)
summary(regressor)
#Conocer detalles del modelo P-valor, R-Cuadrada
#Summary(regressor)
#Predecir resultados con el conjunto de test
y_pred=predict(regressor,newdata = testing_set)
y_pred
#Visualización de datos en el conjunto de entrenamiento
install.packages("ggplot2")
#Visualización de datos en el conjunto de entrenamiento
#install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ggplot2() +
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
gg_tile("Sueldo vs Años de Experiencia (Entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
ggplot() +
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
gg_tile("Sueldo vs Años de Experiencia (Entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
ggplot() +
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
gg_title("Sueldo vs Años de Experiencia (Entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
ggplot() +
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
gg_tittle("Sueldo vs Años de Experiencia (Entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
ggplot() +
geom_point(aes(x=training_set$YearsExperience,y=training_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
ggtitle("Sueldo vs Años de Experiencia (Entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
ggplot() +
geom_point(aes(x=testing_set$YearsExperience,y=testing_set$Salary),
colour="red") +
geom_line(aes(x=training_set$YearsExperience,
y=predict(regressor,newdata = training_set)),
colour="blue") +
ggtitle("Sueldo vs Años de Experiencia (Test)")+
xlab("Años de experiencia")+
ylab("Sueldo($)")
