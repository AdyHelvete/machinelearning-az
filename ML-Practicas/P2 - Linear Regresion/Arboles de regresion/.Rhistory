install.packages(tydiverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("iris")
colnames("iris")
colnames(iris)
dim(iris)
summary(iris)
iris$Setosa<-ifelse(iris$Species=="setosa",1,0)
iris$veriscolor<-(iris$Species=="veriscolor",1,0)
iris$veriscolor<-ifelse(iris$Species=="veriscolor",1,0)
iris$Species<-NULL
colnames(iris)
model<-lm(iris$Sepal.Length ~ iris$Sepal.Width+iris$Petal.Length+iris$Petal.Width+iris$Setosa+iris$veriscolor)
summary(iris)
summary(model)
iris$versicolor<-(iris$Species=="veriscolor",1,0)
iris$versicolor<-(iris$Species=="versicolor",1,0)
setwd("~/GitHub/machinelearning-az/ML-Practicas/P2 - Linear Regresion/Arboles de regresion")
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[,2:3] #Solo ocupamos las columnas 2 y 3
library(rpart)
install.packages("randomForest")
library(randomForest)
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 10)
y_pred=predict(regression,newdata = data.frame(Level=6.5))
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
y_pred=predict(regression,newdata = data.frame(Level=7))
y_pred=predict(regression,newdata = data.frame(Level=8))
y_pred=predict(regression,newdata = data.frame(Level=7))
set.seed(1234) #Semilla para aleatorios
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 10)
y_pred=predict(regression,newdata = data.frame(Level=7))
View(dataset)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=6))
library(ggplot2)
x_grid=seq(min(dataset$Level),max(dataset$Level),0.1) #Suavisando la curva graficando más valores
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color="red")+
geom_line(aes(x=x_grid,y=predict(regression,newdata = data.frame(Level=x_grid))),
color="blue")+
ggtitle("Predicción (Modelo de regresión)")+
xlab("Etiqueta Eje X")+
library(ggplot2)
x_grid=seq(min(dataset$Level),max(dataset$Level),0.1) #Suavisando la curva graficando más valores
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color="red")+
geom_line(aes(x=x_grid,y=predict(regression,newdata = data.frame(Level=x_grid))),
color="blue")+
ggtitle("Predicción (Modelo de regresión)")+
xlab("Etiqueta Eje X")+
ylab("Etiqueta Eje Y")
x_grid=seq(min(dataset$Level),max(dataset$Level),0.01) #Suavisando la curva graficando más valores
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color="red")+
geom_line(aes(x=x_grid,y=predict(regression,newdata = data.frame(Level=x_grid))),
color="blue")+
ggtitle("Predicción (Modelo de regresión)")+
xlab("Etiqueta Eje X")+
ylab("Etiqueta Eje Y")
#Ajustar Modelo de predicción Random Forest Regression con el Conunto de datos
#install.packages("randomForest")
library(randomForest)
set.seed(1234) #Semilla para aleatorios
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 100)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=6))
#Visualización  del modelo con regresion
#install.packages("ggplot2")
library(ggplot2)
x_grid=seq(min(dataset$Level),max(dataset$Level),0.01) #Suavisando la curva graficando más valores
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color="red")+
geom_line(aes(x=x_grid,y=predict(regression,newdata = data.frame(Level=x_grid))),
color="blue")+
ggtitle("Predicción (Modelo de regresión)")+
xlab("Etiqueta Eje X")+
ylab("Etiqueta Eje Y")
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 300)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 500)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 1500)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 2000)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 12000)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 10)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=7))
y_pred=predict(regression,newdata = data.frame(Level=6.5))
regression=randomForest(x=dataset[1],
y=dataset$Salary,
ntree = 500)
#Predicción de resultados de la regresión
y_pred=predict(regression,newdata = data.frame(Level=6.5))
#Visualización  del modelo con regresion
#install.packages("ggplot2")
library(ggplot2)
x_grid=seq(min(dataset$Level),max(dataset$Level),0.01) #Suavisando la curva graficando más valores
ggplot()+
geom_point(aes(x=dataset$Level,y=dataset$Salary),
color="red")+
geom_line(aes(x=x_grid,y=predict(regression,newdata = data.frame(Level=x_grid))),
color="blue")+
ggtitle("Predicción (Modelo de regresión)")+
xlab("Etiqueta Eje X")+
ylab("Etiqueta Eje Y")
