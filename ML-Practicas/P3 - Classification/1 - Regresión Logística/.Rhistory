install.packages(tydiverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("iris")
colnames("iris")
colnames(iris)
dim(iris)
summary(iris)
iris$Setosa<-ifelse(iris$Species=="setosa",1,0)
iris$veriscolor<-(iris$Species=="veriscolor",1,0)
iris$veriscolor<-ifelse(iris$Species=="veriscolor",1,0)
iris$Species<-NULL
colnames(iris)
model<-lm(iris$Sepal.Length ~ iris$Sepal.Width+iris$Petal.Length+iris$Petal.Width+iris$Setosa+iris$veriscolor)
summary(iris)
summary(model)
iris$versicolor<-(iris$Species=="veriscolor",1,0)
iris$versicolor<-(iris$Species=="versicolor",1,0)
setwd("~/GitHub/machinelearning-az/ML-Practicas/P3 - Classification/1 - Regresión Logística")
#Regresión Ligistica
datast==read.csv("Social_Network_Ads.csv")
dataset==read.csv("Social_Network_Ads.csv")
dataset=read.csv("Social_Network_Ads.csv")
View(dataset)
dataset=dataset[,3:5]
View(dataset)
#dividir los datos en conjuntos de entrenamiento y test
#install.packages("caTools")
library(caTools)
set.seed(123) #Semilla para aleatorios
split=sample.split(dataset$Purchased,SplitRatio =0.75)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
View(dataset)
# Escalado de valores
training_set[,1:2]=scale(training_set[,1:2])
testing_set[,1:2]=scale(testing_set[,1:2])
View(testing_set)
classifier=glm(formula = Purchased ~.,
data = training_set,
family = binomial)
View(classifier)
