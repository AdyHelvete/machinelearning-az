install.packages(tydiverse)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
data("iris")
colnames("iris")
colnames(iris)
dim(iris)
summary(iris)
iris$Setosa<-ifelse(iris$Species=="setosa",1,0)
iris$veriscolor<-(iris$Species=="veriscolor",1,0)
iris$veriscolor<-ifelse(iris$Species=="veriscolor",1,0)
iris$Species<-NULL
colnames(iris)
model<-lm(iris$Sepal.Length ~ iris$Sepal.Width+iris$Petal.Length+iris$Petal.Width+iris$Setosa+iris$veriscolor)
summary(iris)
summary(model)
iris$versicolor<-(iris$Species=="veriscolor",1,0)
iris$versicolor<-(iris$Species=="versicolor",1,0)
#Clasificador con Random Forest
#importar dataset
dataset=read.csv("Social_Network_Ads.csv")
#Seleccionar columnas de variables
dataset=dataset[,3:5]
# En algunos casos (BAyes,random forest, descicion tree) Codificar la variable de clasificación como factor
dataset$Purchased=factor(dataset$Purchased,
levels=c(0,1))
#dividir los datos en conjuntos de entrenamiento y test
#install.packages("caTools")
library(caTools)
set.seed(123) #Semilla para aleatorios
split=sample.split(dataset$Purchased,SplitRatio =0.75)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
# Escalado de valores no aplica para Arboles de Desición
#training_set[,1:2]=scale(training_set[,1:2])
#testing_set[,1:2]=scale(testing_set[,1:2])
#Ajustar el clasificador Random Forest con el conjunto de entrenamiento
#Aqui
#install.packages("randomForest")
library(randomForest)
classifier=randomForest(x=training_set[,-3],
y=training_set$Purchased,
ntree = 300)
#predicción de los resultados con el conjunto de testing
y_pred=predict(classifier,newdata = testing_set[,-3],
type="class")
#Crear matriz de confusión
cm=table(testing_set[,3],y_pred)
setwd("~/GitHub/machinelearning-az/ML-Practicas/P3 - Classification/7 - Random Forest")
#Clasificador con Random Forest
#importar dataset
dataset=read.csv("Social_Network_Ads.csv")
#Seleccionar columnas de variables
dataset=dataset[,3:5]
# En algunos casos (BAyes,random forest, descicion tree) Codificar la variable de clasificación como factor
dataset$Purchased=factor(dataset$Purchased,
levels=c(0,1))
#dividir los datos en conjuntos de entrenamiento y test
#install.packages("caTools")
library(caTools)
set.seed(123) #Semilla para aleatorios
split=sample.split(dataset$Purchased,SplitRatio =0.75)
training_set=subset(dataset,split==TRUE)
testing_set=subset(dataset,split==FALSE)
# Escalado de valores no aplica para Arboles de Desición
#training_set[,1:2]=scale(training_set[,1:2])
#testing_set[,1:2]=scale(testing_set[,1:2])
#Ajustar el clasificador Random Forest con el conjunto de entrenamiento
#Aqui
#install.packages("randomForest")
library(randomForest)
classifier=randomForest(x=training_set[,-3],
y=training_set$Purchased,
ntree = 300)
#predicción de los resultados con el conjunto de testing
y_pred=predict(classifier,newdata = testing_set[,-3],
type="class")
#Crear matriz de confusión
cm=table(testing_set[,3],y_pred)
plot(classifier)
text(classifier)
